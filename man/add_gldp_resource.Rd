% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_gldp_resource.R
\name{add_gldp_resource}
\alias{add_gldp_resource}
\title{Add a Resource with Schema to a Package}
\usage{
add_gldp_resource(
  package,
  resource_name,
  data,
  cast_type = FALSE,
  replace = FALSE,
  delim = ","
)
}
\arguments{
\item{package}{The package object to which the resource will be added.}

\item{resource_name}{A character string specifying the name of the resource. This name is used
to locate the schema file.}

\item{data}{A data frame containing the data to be added as a resource. The data frame will be
adjusted according to the schema.}

\item{cast_type}{A logical value indicating whether the data frame should be cast to the types
specified in the schema. Defaults to \code{FALSE}.}

\item{replace}{If \code{TRUE}, the added resource will replace an existing
resource with the same name.}

\item{delim}{Single character used to separate the fields in the CSV file(s),
e.g. \verb{\\t} for tab delimited file.
Will be set as \code{delimiter} in the resource Table Dialect, so read functions
.  know how to read the file(s).}
}
\value{
The updated package object with the new resource added.
}
\description{
This function adds a resource to a package and ensures that the data conforms to the schema
defined for that resource. The schema is used to validate and potentially modify the data frame
before adding it to the package.
}
\details{
The schema for the resource is fetched from a JSON file located in a specified directory.
The function adjusts the data frame according to the schema's \code{fieldsMatch} property:
\itemize{
\item \code{"equal"}: The data frame must have exactly the same fields as defined in the
schema.
\item \code{"subset"}: The data frame must have at least the fields defined in the schema,
but may have additional fields. Fields not present in the schema are added to the schema.
\item \code{"superset"}: The data frame may have fields not present in the schema, but must
include all fields defined in the schema.
\item \code{"partial"}: The data frame must have at least one field defined in the schema.
}
}
\examples{
\dontrun{
my_package <- some_package_function()
my_data <- data.frame(a = 1:5, b = letters[1:5])
updated_package <- add_gldp_resource(my_package, "my_resource", my_data)
}

}
