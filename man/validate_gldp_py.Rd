% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_gldp.R
\name{validate_gldp_py}
\alias{validate_gldp_py}
\title{Validate a GeoLocator Data Package}
\usage{
validate_gldp_py(
  pkg,
  path = "/Users/rafnuss/anaconda3/bin/",
  only_package = NULL,
  pkg_dir = tempdir()
)
}
\arguments{
\item{pkg}{An object of class \code{"geolocatordp"} representing the GeoLocator Data Package to be
validated.}

\item{path}{A string specifying the path to the directory containing the \code{frictionless}
executable. Defaults to \code{"/Users/rafnuss/anaconda3/bin/"}.}

\item{only_package}{A logical indicating whether to validate only the package metadata (TRUE) or
the entire package including resources (FALSE). Defaults to \code{NULL}, in which case it is
determined based on the presence of resources in the package.}

\item{pkg_dir}{A string specifying the directory where the package files will be written for
validation. Defaults to a temporary directory created with \code{tempdir()}.}
}
\value{
NULL. The function performs validation as a side effect and does not return a value.
}
\description{
This function validates a GeoLocator Data Package using the \code{frictionless} command-line tool. It
writes the package metadata to a JSON file and performs validation to ensure that the package
conforms to the required standards. The function supports two modes: validating only the package
metadata or validating the entire package including its resources.
}
\details{
The function performs the following steps:
\enumerate{
\item If \code{only_package} is \code{TRUE} or the package contains no resources, it writes only the metadata
to a JSON file and validates it.
\item If \code{only_package} is \code{FALSE} and resources are present, it writes the entire package,
including resources, to a directory and validates it.
\item Executes the \code{frictionless} validation command using the specified path to the \code{frictionless}
executable.
}
}
